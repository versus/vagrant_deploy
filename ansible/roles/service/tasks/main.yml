- meta: flush_handlers
  tags: [service]

- name: Compose directory is present
  file:
    dest: "{{ compose_config_dir }}/{{ alias }}{{ container_name }}"
    state: directory
  tags: [service]

- name: Compose template is present
  template:
    src: "{{ container_name }}.yml.j2"
    dest: "{{ compose_config_dir }}/{{ alias }}{{ container_name }}/docker-compose.yml.ctmpl"
  register: result
  tags: [service]

- include: apply-service-template.yml

- name: Color is retrieved from Consul
  consul_kv:
    action: get
    key: "services/{{ alias }}{{ container_name }}/color"
  register: container_color
  ignore_errors: yes
  tags: [service]

- name: Set color
  set_fact:
    container_color: "{{ container_color.value[0].Value }}"
  when: container_color|success
  ignore_errors: yes
  tags: [service]

- name: Set new color to blue
  set_fact:
    container_new_color: blue
    container_color: green
  when: container_color != "blue"
  tags: [service]

- name: Set new color to green
  set_fact:
    container_new_color: green
    container_color: blue
  when: container_color == "blue"
  tags: [service]

- name: git pull for blue
  git: repo=git@github.com:versus/ssv4tempo.git dest=/opt/code/blue  accept_hostkey=true
  when: container_color == "blue"
  tags: [git]

- name: git pull for green
  git: repo=git@github.com:versus/ssv4tempo.git dest=/opt/code/green  accept_hostkey=true
  when: container_color == "green"
  tags: [git]

- name: Container is pulled
  shell: docker-compose pull {{ container_new_color }}
  args:
    chdir: "{{ compose_config_dir }}/{{ alias }}{{ container_name }}"
  tags: [service]

- name: Container is stopped
  shell: docker-compose stop {{ container_new_color }}
  args:
    chdir: "{{ compose_config_dir }}/{{ alias }}{{ container_name }}"
  tags: [service]

- name: Container is removed
  shell: docker-compose rm -f {{ container_new_color }}
  args:
    chdir: "{{ compose_config_dir }}/{{ alias }}{{ container_name }}"
  tags: [service]

- name: Container is up
  shell: docker-compose scale {{ container_new_color }}={{ service_instances }}
  args:
    chdir: "{{ compose_config_dir }}/{{ alias }}{{ container_name }}"
  tags: [service]

- name: Color is updated
  consul_kv:
    key: services/{{ alias }}{{ container_name }}/color
    value: "{{ container_new_color }}"
    action: put
  tags: [service]

- name: Old container is stopped
  shell: docker-compose stop {{ container_color }}
  args:
    chdir: "{{ compose_config_dir }}/{{ alias }}{{ container_name }}"
  tags: [service]
